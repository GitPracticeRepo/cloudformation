{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Trying to help john realize the ntier architecture with load balancers",
    "Parameters": {
        "vpcname": {
            "Description": "Enter the name of your vpc",
            "Type": "String",
            "Default": "fromcf"
        },
        "vpccidrrage": {
            "Description": "Enter the cidr range of vpc",
            "Type": "String",
            "Default": "192.168.0.0/16"
        },
        "websubnetrange": {
            "Description": "Enter the cidr range of web subnet",
            "Type": "String",
            "Default": "192.168.0.0/24"
        },
        "appsubnetrange": {
            "Description": "Enter the cidr range of app subnet",
            "Type": "String",
            "Default": "192.168.1.0/24"
        },
        "dbsubnetrange": {
            "Description": "Enter the cidr range of db subnet",
            "Type": "String",
            "Default": "192.168.2.0/24"
        },
        "websubnetaz": {
            "Description": "Select the Web subnet Az",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "appsubnetaz": {
            "Description": "Select the app subnet Az",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "dbsubnetaz": {
            "Description": "Select the db subnet Az",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "websubnetharange": {
            "Description": "Enter the subnet range for web ha subnet",
            "Type": "String",
            "Default": "192.168.3.0/24"
        },
        "websubnethaaz": {
            "Description": "Select the Web subnet HA Az",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "appsubnetharange": {
            "Description": "Enter the subnet range for app ha subnet",
            "Type": "String",
            "Default": "192.168.4.0/24"
        },
        "appsubnethaaz": {
            "Description": "Select the app subnet HA Az",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "dbsubnetharange": {
            "Description": "Enter the subnet range for db ha subnet",
            "Type": "String",
            "Default": "192.168.5.0/24"
        },
        "dbsubnethaaz": {
            "Description": "Select the db subnet HA Az",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "keypair": {
            "Description": "Select the Key pair for app server",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "appserversize": {
            "Description": "Select the ec2 instance type for app server",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "m1.small",
                "m1.large"
            ]
        },
        "webserversize": {
            "Description": "Select the ec2 instance type for web server",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "m1.small",
                "m1.large"
            ]
        }
    },
    "Mappings": {
        "RegionMap": {
            "ap-south-1": {
                "ubuntu18ami": "ami-03f0fd1a2ba530e75"
            },
            "us-east-1": {
                "ubuntu18ami": "ami-0817d428a6fb68645"
            },
            "us-east-2": {
                "ubuntu18ami": "ami-0e82959d4ed12de3f"
            },
            "us-west-2": {
                "ubuntu18ami": "ami-07a29e5e945228fa1"
            }
        }
    },
    "Resources": {
        "ntiervpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidrrage"
                },
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "vpcname"
                        }
                    }
                ]
            }
        },
        "websubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "websubnetaz"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Ref": "websubnetrange"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "fromcf-web1"
                    }
                ]
            }
        },
        "appsubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "appsubnetaz"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Ref": "appsubnetrange"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "fromcf-app1"
                    }
                ]
            }
        },
        "dbsubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "dbsubnetaz"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Ref": "dbsubnetrange"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "fromcf-db1"
                    }
                ]
            }
        },
        "websubnetha": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "websubnethaaz"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Ref": "websubnetharange"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "fromcf-web2"
                    }
                ]
            }
        },
        "appsubnetha": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "appsubnethaaz"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Ref": "appsubnetharange"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "fromcf-app2"
                    }
                ]
            }
        },
        "dbsubnetha": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "dbsubnethaaz"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "CidrBlock": {
                    "Ref": "dbsubnetharange"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "fromcf-db2"
                    }
                ]
            }
        },
        "ntierigw": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierigw"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "InternetGatewayId": {
                    "Ref": "ntierigw"
                }
            }
        },
        "public": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntier-public"
                    }
                ]
            }
        },
        "private": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntier-private"
                    }
                ]
            }
        },
        "publicigwroute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "public"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "ntierigw"
                }
            }
        },
        "publicweb": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "websubnet"
                },
                "RouteTableId": {
                    "Ref": "public"
                }
            }
        },
        "publicwebha": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "websubnetha"
                },
                "RouteTableId": {
                    "Ref": "public"
                }
            }
        },
        "privateapp": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "appsubnet"
                },
                "RouteTableId": {
                    "Ref": "private"
                }
            }
        },
        "privateappha": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "appsubnetha"
                },
                "RouteTableId": {
                    "Ref": "private"
                }
            }
        },
        "privatedb": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "dbsubnet"
                },
                "RouteTableId": {
                    "Ref": "private"
                }
            }
        },
        "privatedbha": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "dbsubnetha"
                },
                "RouteTableId": {
                    "Ref": "private"
                }
            }
        },
        "dbsubnetgroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "HA for lt",
                "SubnetIds": [
                    {
                        "Ref": "dbsubnet"
                    },
                    {
                        "Ref": "dbsubnetha"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierdbsubnetgroup"
                    }
                ]
            }
        },
        "dbsecuritygroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This security group is for db",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "vpccidrrage"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "3306",
                        "ToPort": "3306"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbsecurity"
                    }
                ]
            }
        },
        "appsecuritygroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This is app security group",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "vpccidrrage"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "vpccidrrage"
                        },
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "appsecurity"
                    }
                ]
            }
        },
        "websecuritygroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "This is app security group",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "websecurity"
                    }
                ]
            }
        },
        "ntierdb": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "AllocatedStorage": "20",
                "DBInstanceClass": "db.t2.micro",
                "AllowMajorVersionUpgrade": "false",
                "AutoMinorVersionUpgrade": "false",
                "BackupRetentionPeriod": "0",
                "DBInstanceIdentifier": "ltntierdb",
                "DBName": "ltntier",
                "DBSubnetGroupName": {
                    "Ref": "dbsubnetgroup"
                },
                "Engine": "mysql",
                "MasterUsername": "root",
                "MasterUserPassword": "rootroot",
                "MultiAZ": "false",
                "PubliclyAccessible": "true",
                "StorageType": "gp2",
                "VPCSecurityGroups": [
                    {
                        "Ref": "dbsecuritygroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntierdb"
                    }
                ]
            }
        }
        
    },
    "Outputs": {
        
    }
}